# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@master
      - name: Run GitHub File Sync
        uses: BetaHuhn/repo-file-sync-action@v1
        with:
          GH_PAT: ${{ secrets.GH_PAT }}
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: "gh-pages"
      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Pandoc
        run: |
          # Replace the URL with the latest version available if needed
          PANDOC_VERSION="2.19.2"
          curl -sSL https://github.com/jgm/pandoc/releases/download/${PANDOC_VERSION}/pandoc-${PANDOC_VERSION}-linux-amd64.tar.gz | tar xvz
          cp pandoc-${PANDOC_VERSION}/bin/pandoc /usr/local/bin
          pandoc-${PANDOC_VERSION}/bin/pandoc --version
          echo $PATH
          ls /usr/local/bin/pandoc
          pandoc --version
      - name: Build notebooks
        run: |
          pip install --upgrade pip
          pip install -r docs/requirements.txt
          # pip install git+https://github.com/pachterlab/voyagerpy.git@main
          # pip install jupyterlab "scanpy[leiden]"
          # mkdir rendered_notebooks
          # find . -name \*.ipynb -print | xargs -I {} jupyter nbconvert --execute --to html --output-dir rendered_notebooks --template lab --HTMLExporter.preprocessors="nbconvert.preprocessors.ExtractOutputPreprocessor" {}
          # find notebooks -type f -name "*.html" | cut -f2 -d'/' | cut -f1 -d'.' | xargs -I {} python notebooks/nb_strip.py --output _includes/notebooks/{}.html rendered_notebooks/{}.html
          # mv notebooks/*_files img/ 2>/dev/null
          pandoc --version
          make -C docs html
          touch .nojekyll
          touch docs/.nojekyll
          mv docs/_site/html _site
#       - name: Setup Pages
#         uses: actions/configure-pages@v3
#       - name: Build with Jekyll
#         uses: actions/jekyll-build-pages@v1
#         with:
#           source: ./
#           destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: _site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
